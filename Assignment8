#include <iostream>
#include <string>
using namespace std;

void outputOne(string names[], int scores[], int index){
        cout << "#" << index << ": "<<names[index] << " - " << scores[index] << endl;
}

void outputAll(string names[], int scores [], int size)
{
        for(int i=0;i<size;i++){
                outputOne(names, scores, i);
        }
}

int getAverageScore(int scores[], int size){
        int total = 0;
        for(int i=0;i<size;i++){
                total += scores[i];
        }
        return total/size;
}

void outputNew(string names[], int scores[], int index){
        cout << "#5 " << ": " << names[5] << " - " << scores[5] << endl;
}


int main ()
{
        string newstudentname;
        int newstudentscore;
        string names[6] = {"Apple", "Ben", "Carrie", "Denny", "Elliot","Justine"};
        int scores[6] = {100, 99, 98, 97, 96, 75};
        int operation, index;
        bool running = true;

do
{
        cout << "What would you like to do next?" << endl;
        cout << " (1-Output student name/score)" << endl;
        cout << " (2-Output all names/scores)" << endl;
        cout << " (3-Output average score)" << endl;
        cout << " (4-Input new student name)" << endl;
        cout << " (5-Input new student score)" <<endl;
        cout << " (6-Output new student name/score)" <<endl;
        cout << " (anything else-Exit the Program)" << endl;
        cout << "> ";
        cin >> operation;
        switch(operation)
        {
                case 1:
                        cout << "> Please input student #: ";
                        cin >> index;
                        if(index>=0 && index <7)
                                outputOne(names, scores, index);
                        else
                                cout << "Invalid index!" << endl;
                        break;
                case 2:
                        outputAll(names, scores,6);
                        break;
                case 3:
                        cout << "Average = " << getAverageScore(scores,6) << endl;
                        break;
                default:
                        running = false;
                        break;
                case 4: cout << "Please input new student name: ";
                        cin >> newstudentname;
                        names[5]=newstudentname;
                        break;
                case 5: cout << "Please input new student score: ";
                        cin >> newstudentscore;
                        scores[5]=newstudentscore;
                        break;
                case 6: outputNew(names, scores, index);
                        break;
        }
} while(running);
return 0;

}
